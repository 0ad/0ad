// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RLAPI.proto

#include "RLAPI.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_RLAPI_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AIPlayer_RLAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_RLAPI_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Action_RLAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_RLAPI_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Template_RLAPI_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_RLAPI_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ScenarioConfig_RLAPI_2eproto;
class GetTemplateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTemplateRequest> _instance;
} _GetTemplateRequest_default_instance_;
class TemplatesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Templates> _instance;
} _Templates_default_instance_;
class TemplateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Template> _instance;
} _Template_default_instance_;
class ActionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Actions> _instance;
} _Actions_default_instance_;
class ActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Action> _instance;
} _Action_default_instance_;
class ObservationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Observation> _instance;
} _Observation_default_instance_;
class ResetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetRequest> _instance;
} _ResetRequest_default_instance_;
class ConnectRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectRequest> _instance;
} _ConnectRequest_default_instance_;
class AIPlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AIPlayer> _instance;
} _AIPlayer_default_instance_;
class ScenarioConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScenarioConfig> _instance;
} _ScenarioConfig_default_instance_;
static void InitDefaultsGetTemplateRequest_RLAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GetTemplateRequest_default_instance_;
    new (ptr) ::GetTemplateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetTemplateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTemplateRequest_RLAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTemplateRequest_RLAPI_2eproto}, {}};

static void InitDefaultsTemplates_RLAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Templates_default_instance_;
    new (ptr) ::Templates();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Templates::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Templates_RLAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTemplates_RLAPI_2eproto}, {
      &scc_info_Template_RLAPI_2eproto.base,}};

static void InitDefaultsTemplate_RLAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Template_default_instance_;
    new (ptr) ::Template();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Template::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Template_RLAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTemplate_RLAPI_2eproto}, {}};

static void InitDefaultsActions_RLAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Actions_default_instance_;
    new (ptr) ::Actions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Actions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Actions_RLAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsActions_RLAPI_2eproto}, {
      &scc_info_Action_RLAPI_2eproto.base,}};

static void InitDefaultsAction_RLAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Action_default_instance_;
    new (ptr) ::Action();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Action::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Action_RLAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAction_RLAPI_2eproto}, {}};

static void InitDefaultsObservation_RLAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Observation_default_instance_;
    new (ptr) ::Observation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Observation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Observation_RLAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObservation_RLAPI_2eproto}, {}};

static void InitDefaultsResetRequest_RLAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResetRequest_default_instance_;
    new (ptr) ::ResetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResetRequest_RLAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResetRequest_RLAPI_2eproto}, {
      &scc_info_ScenarioConfig_RLAPI_2eproto.base,}};

static void InitDefaultsConnectRequest_RLAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConnectRequest_default_instance_;
    new (ptr) ::ConnectRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConnectRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConnectRequest_RLAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConnectRequest_RLAPI_2eproto}, {
      &scc_info_ScenarioConfig_RLAPI_2eproto.base,}};

static void InitDefaultsAIPlayer_RLAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AIPlayer_default_instance_;
    new (ptr) ::AIPlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AIPlayer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AIPlayer_RLAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAIPlayer_RLAPI_2eproto}, {}};

static void InitDefaultsScenarioConfig_RLAPI_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ScenarioConfig_default_instance_;
    new (ptr) ::ScenarioConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ScenarioConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScenarioConfig_RLAPI_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScenarioConfig_RLAPI_2eproto}, {
      &scc_info_AIPlayer_RLAPI_2eproto.base,}};

void InitDefaults_RLAPI_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetTemplateRequest_RLAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Templates_RLAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Template_RLAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Actions_RLAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Action_RLAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Observation_RLAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetRequest_RLAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectRequest_RLAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AIPlayer_RLAPI_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScenarioConfig_RLAPI_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_RLAPI_2eproto[10];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_RLAPI_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_RLAPI_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_RLAPI_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetTemplateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GetTemplateRequest, names_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Templates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Templates, templates_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Template, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Template, name_),
  PROTOBUF_FIELD_OFFSET(::Template, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Actions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Actions, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Action, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Observation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Observation, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ResetRequest, scenario_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConnectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ConnectRequest, scenario_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AIPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AIPlayer, id_),
  PROTOBUF_FIELD_OFFSET(::AIPlayer, type_),
  PROTOBUF_FIELD_OFFSET(::AIPlayer, difficulty_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ScenarioConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ScenarioConfig, type_),
  PROTOBUF_FIELD_OFFSET(::ScenarioConfig, name_),
  PROTOBUF_FIELD_OFFSET(::ScenarioConfig, username_),
  PROTOBUF_FIELD_OFFSET(::ScenarioConfig, playerid_),
  PROTOBUF_FIELD_OFFSET(::ScenarioConfig, size_),
  PROTOBUF_FIELD_OFFSET(::ScenarioConfig, numplayers_),
  PROTOBUF_FIELD_OFFSET(::ScenarioConfig, seed_),
  PROTOBUF_FIELD_OFFSET(::ScenarioConfig, aiseed_),
  PROTOBUF_FIELD_OFFSET(::ScenarioConfig, gamespeed_),
  PROTOBUF_FIELD_OFFSET(::ScenarioConfig, players_),
  PROTOBUF_FIELD_OFFSET(::ScenarioConfig, savereplay_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::GetTemplateRequest)},
  { 6, -1, sizeof(::Templates)},
  { 12, -1, sizeof(::Template)},
  { 19, -1, sizeof(::Actions)},
  { 25, -1, sizeof(::Action)},
  { 31, -1, sizeof(::Observation)},
  { 37, -1, sizeof(::ResetRequest)},
  { 43, -1, sizeof(::ConnectRequest)},
  { 49, -1, sizeof(::AIPlayer)},
  { 57, -1, sizeof(::ScenarioConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetTemplateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Templates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Template_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Actions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Action_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Observation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ConnectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AIPlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ScenarioConfig_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_RLAPI_2eproto = {
  {}, AddDescriptors_RLAPI_2eproto, "RLAPI.proto", schemas,
  file_default_instances, TableStruct_RLAPI_2eproto::offsets,
  file_level_metadata_RLAPI_2eproto, 10, file_level_enum_descriptors_RLAPI_2eproto, file_level_service_descriptors_RLAPI_2eproto,
};

const char descriptor_table_protodef_RLAPI_2eproto[] =
  "\n\013RLAPI.proto\"#\n\022GetTemplateRequest\022\r\n\005n"
  "ames\030\001 \003(\t\")\n\tTemplates\022\034\n\ttemplates\030\001 \003"
  "(\0132\t.Template\")\n\010Template\022\014\n\004name\030\001 \001(\t\022"
  "\017\n\007content\030\002 \001(\t\"#\n\007Actions\022\030\n\007actions\030\001"
  " \003(\0132\007.Action\"\031\n\006Action\022\017\n\007content\030\001 \001(\t"
  "\"\036\n\013Observation\022\017\n\007content\030\001 \001(\t\"1\n\014Rese"
  "tRequest\022!\n\010scenario\030\001 \001(\0132\017.ScenarioCon"
  "fig\"3\n\016ConnectRequest\022!\n\010scenario\030\001 \001(\0132"
  "\017.ScenarioConfig\"8\n\010AIPlayer\022\n\n\002id\030\001 \001(\005"
  "\022\014\n\004type\030\002 \001(\t\022\022\n\ndifficulty\030\003 \001(\r\"\323\001\n\016S"
  "cenarioConfig\022\014\n\004type\030\001 \001(\t\022\014\n\004name\030\002 \001("
  "\t\022\020\n\010username\030\003 \001(\t\022\020\n\010playerID\030\004 \001(\005\022\014\n"
  "\004size\030\005 \001(\r\022\022\n\nnumPlayers\030\006 \001(\r\022\014\n\004seed\030"
  "\007 \001(\r\022\016\n\006aiseed\030\010 \001(\r\022\021\n\tgameSpeed\030\t \001(\002"
  "\022\032\n\007players\030\n \003(\0132\t.AIPlayer\022\022\n\nsaveRepl"
  "ay\030\013 \001(\0102\260\001\n\005RLAPI\022 \n\004Step\022\010.Actions\032\014.O"
  "bservation\"\000\022&\n\005Reset\022\r.ResetRequest\032\014.O"
  "bservation\"\000\022*\n\007Connect\022\017.ConnectRequest"
  "\032\014.Observation\"\000\0221\n\014GetTemplates\022\023.GetTe"
  "mplateRequest\032\n.Templates\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_RLAPI_2eproto = {
  false, InitDefaults_RLAPI_2eproto, 
  descriptor_table_protodef_RLAPI_2eproto,
  "RLAPI.proto", &assign_descriptors_table_RLAPI_2eproto, 795,
};

void AddDescriptors_RLAPI_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_RLAPI_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_RLAPI_2eproto = []() { AddDescriptors_RLAPI_2eproto(); return true; }();

// ===================================================================

void GetTemplateRequest::InitAsDefaultInstance() {
}
class GetTemplateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTemplateRequest::kNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTemplateRequest::GetTemplateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetTemplateRequest)
}
GetTemplateRequest::GetTemplateRequest(const GetTemplateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      names_(from.names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GetTemplateRequest)
}

void GetTemplateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetTemplateRequest_RLAPI_2eproto.base);
}

GetTemplateRequest::~GetTemplateRequest() {
  // @@protoc_insertion_point(destructor:GetTemplateRequest)
  SharedDtor();
}

void GetTemplateRequest::SharedDtor() {
}

void GetTemplateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTemplateRequest& GetTemplateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetTemplateRequest_RLAPI_2eproto.base);
  return *internal_default_instance();
}


void GetTemplateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  names_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetTemplateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetTemplateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string names = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("GetTemplateRequest.names");
          object = msg->add_names();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetTemplateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetTemplateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string names = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->names(this->names_size() - 1).data(),
            static_cast<int>(this->names(this->names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GetTemplateRequest.names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetTemplateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetTemplateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetTemplateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetTemplateRequest.names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->names(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetTemplateRequest)
}

::google::protobuf::uint8* GetTemplateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetTemplateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GetTemplateRequest.names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->names(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetTemplateRequest)
  return target;
}

size_t GetTemplateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetTemplateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string names = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->names_size());
  for (int i = 0, n = this->names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTemplateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTemplateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetTemplateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetTemplateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetTemplateRequest)
    MergeFrom(*source);
  }
}

void GetTemplateRequest::MergeFrom(const GetTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  names_.MergeFrom(from.names_);
}

void GetTemplateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTemplateRequest::CopyFrom(const GetTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTemplateRequest::IsInitialized() const {
  return true;
}

void GetTemplateRequest::Swap(GetTemplateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTemplateRequest::InternalSwap(GetTemplateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  names_.InternalSwap(CastToBase(&other->names_));
}

::google::protobuf::Metadata GetTemplateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RLAPI_2eproto);
  return ::file_level_metadata_RLAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Templates::InitAsDefaultInstance() {
}
class Templates::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Templates::kTemplatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Templates::Templates()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Templates)
}
Templates::Templates(const Templates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      templates_(from.templates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Templates)
}

void Templates::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Templates_RLAPI_2eproto.base);
}

Templates::~Templates() {
  // @@protoc_insertion_point(destructor:Templates)
  SharedDtor();
}

void Templates::SharedDtor() {
}

void Templates::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Templates& Templates::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Templates_RLAPI_2eproto.base);
  return *internal_default_instance();
}


void Templates::Clear() {
// @@protoc_insertion_point(message_clear_start:Templates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  templates_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Templates::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Templates*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .Template templates = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Template::_InternalParse;
          object = msg->add_templates();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Templates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Templates)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Template templates = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_templates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Templates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Templates)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Templates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Templates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Template templates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->templates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->templates(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Templates)
}

::google::protobuf::uint8* Templates::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Templates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Template templates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->templates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->templates(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Templates)
  return target;
}

size_t Templates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Templates)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Template templates = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->templates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->templates(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Templates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Templates)
  GOOGLE_DCHECK_NE(&from, this);
  const Templates* source =
      ::google::protobuf::DynamicCastToGenerated<Templates>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Templates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Templates)
    MergeFrom(*source);
  }
}

void Templates::MergeFrom(const Templates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Templates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  templates_.MergeFrom(from.templates_);
}

void Templates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Templates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Templates::CopyFrom(const Templates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Templates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Templates::IsInitialized() const {
  return true;
}

void Templates::Swap(Templates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Templates::InternalSwap(Templates* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&templates_)->InternalSwap(CastToBase(&other->templates_));
}

::google::protobuf::Metadata Templates::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RLAPI_2eproto);
  return ::file_level_metadata_RLAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Template::InitAsDefaultInstance() {
}
class Template::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Template::kNameFieldNumber;
const int Template::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Template::Template()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Template)
}
Template::Template(const Template& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:Template)
}

void Template::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Template_RLAPI_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Template::~Template() {
  // @@protoc_insertion_point(destructor:Template)
  SharedDtor();
}

void Template::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Template::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Template& Template::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Template_RLAPI_2eproto.base);
  return *internal_default_instance();
}


void Template::Clear() {
// @@protoc_insertion_point(message_clear_start:Template)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Template::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Template*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Template.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string content = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Template.content");
        object = msg->mutable_content();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Template::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Template)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Template.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Template.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Template)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Template)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Template::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Template)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Template.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Template.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Template)
}

::google::protobuf::uint8* Template::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Template)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Template.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Template.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Template)
  return target;
}

size_t Template::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Template)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Template::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Template)
  GOOGLE_DCHECK_NE(&from, this);
  const Template* source =
      ::google::protobuf::DynamicCastToGenerated<Template>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Template)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Template)
    MergeFrom(*source);
  }
}

void Template::MergeFrom(const Template& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Template)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void Template::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Template)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Template::CopyFrom(const Template& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Template)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Template::IsInitialized() const {
  return true;
}

void Template::Swap(Template* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Template::InternalSwap(Template* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Template::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RLAPI_2eproto);
  return ::file_level_metadata_RLAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Actions::InitAsDefaultInstance() {
}
class Actions::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Actions::kActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Actions::Actions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Actions)
}
Actions::Actions(const Actions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Actions)
}

void Actions::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Actions_RLAPI_2eproto.base);
}

Actions::~Actions() {
  // @@protoc_insertion_point(destructor:Actions)
  SharedDtor();
}

void Actions::SharedDtor() {
}

void Actions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Actions& Actions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Actions_RLAPI_2eproto.base);
  return *internal_default_instance();
}


void Actions::Clear() {
// @@protoc_insertion_point(message_clear_start:Actions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Actions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Actions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .Action actions = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Action::_InternalParse;
          object = msg->add_actions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Actions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Actions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Action actions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Actions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Actions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Actions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Actions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Action actions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->actions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Actions)
}

::google::protobuf::uint8* Actions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Actions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Action actions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->actions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Actions)
  return target;
}

size_t Actions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Actions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Action actions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->actions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Actions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Actions)
  GOOGLE_DCHECK_NE(&from, this);
  const Actions* source =
      ::google::protobuf::DynamicCastToGenerated<Actions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Actions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Actions)
    MergeFrom(*source);
  }
}

void Actions::MergeFrom(const Actions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Actions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
}

void Actions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Actions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Actions::CopyFrom(const Actions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Actions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Actions::IsInitialized() const {
  return true;
}

void Actions::Swap(Actions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Actions::InternalSwap(Actions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&actions_)->InternalSwap(CastToBase(&other->actions_));
}

::google::protobuf::Metadata Actions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RLAPI_2eproto);
  return ::file_level_metadata_RLAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Action::InitAsDefaultInstance() {
}
class Action::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Action::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Action::Action()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Action)
}
Action::Action(const Action& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:Action)
}

void Action::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Action_RLAPI_2eproto.base);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:Action)
  SharedDtor();
}

void Action::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Action::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Action& Action::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Action_RLAPI_2eproto.base);
  return *internal_default_instance();
}


void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Action::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Action*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string content = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Action.content");
        object = msg->mutable_content();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Action)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Action.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Action)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Action.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Action)
}

::google::protobuf::uint8* Action::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Action.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Action)
  return target;
}

size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Action)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Action)
  GOOGLE_DCHECK_NE(&from, this);
  const Action* source =
      ::google::protobuf::DynamicCastToGenerated<Action>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  return true;
}

void Action::Swap(Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Action::InternalSwap(Action* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Action::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RLAPI_2eproto);
  return ::file_level_metadata_RLAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Observation::InitAsDefaultInstance() {
}
class Observation::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Observation::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Observation::Observation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Observation)
}
Observation::Observation(const Observation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:Observation)
}

void Observation::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Observation_RLAPI_2eproto.base);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Observation::~Observation() {
  // @@protoc_insertion_point(destructor:Observation)
  SharedDtor();
}

void Observation::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Observation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Observation& Observation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Observation_RLAPI_2eproto.base);
  return *internal_default_instance();
}


void Observation::Clear() {
// @@protoc_insertion_point(message_clear_start:Observation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Observation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Observation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string content = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Observation.content");
        object = msg->mutable_content();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Observation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Observation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Observation.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Observation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Observation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Observation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Observation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Observation.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Observation)
}

::google::protobuf::uint8* Observation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Observation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Observation.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Observation)
  return target;
}

size_t Observation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Observation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Observation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Observation)
  GOOGLE_DCHECK_NE(&from, this);
  const Observation* source =
      ::google::protobuf::DynamicCastToGenerated<Observation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Observation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Observation)
    MergeFrom(*source);
  }
}

void Observation::MergeFrom(const Observation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Observation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void Observation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Observation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Observation::CopyFrom(const Observation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Observation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Observation::IsInitialized() const {
  return true;
}

void Observation::Swap(Observation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Observation::InternalSwap(Observation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Observation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RLAPI_2eproto);
  return ::file_level_metadata_RLAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResetRequest::InitAsDefaultInstance() {
  ::_ResetRequest_default_instance_._instance.get_mutable()->scenario_ = const_cast< ::ScenarioConfig*>(
      ::ScenarioConfig::internal_default_instance());
}
class ResetRequest::HasBitSetters {
 public:
  static const ::ScenarioConfig& scenario(const ResetRequest* msg);
};

const ::ScenarioConfig&
ResetRequest::HasBitSetters::scenario(const ResetRequest* msg) {
  return *msg->scenario_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetRequest::kScenarioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetRequest::ResetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResetRequest)
}
ResetRequest::ResetRequest(const ResetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_scenario()) {
    scenario_ = new ::ScenarioConfig(*from.scenario_);
  } else {
    scenario_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ResetRequest)
}

void ResetRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResetRequest_RLAPI_2eproto.base);
  scenario_ = nullptr;
}

ResetRequest::~ResetRequest() {
  // @@protoc_insertion_point(destructor:ResetRequest)
  SharedDtor();
}

void ResetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete scenario_;
}

void ResetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetRequest& ResetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResetRequest_RLAPI_2eproto.base);
  return *internal_default_instance();
}


void ResetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && scenario_ != nullptr) {
    delete scenario_;
  }
  scenario_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResetRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResetRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .ScenarioConfig scenario = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ScenarioConfig::_InternalParse;
        object = msg->mutable_scenario();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ScenarioConfig scenario = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scenario()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ScenarioConfig scenario = 1;
  if (this->has_scenario()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::scenario(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResetRequest)
}

::google::protobuf::uint8* ResetRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ScenarioConfig scenario = 1;
  if (this->has_scenario()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::scenario(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResetRequest)
  return target;
}

size_t ResetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ScenarioConfig scenario = 1;
  if (this->has_scenario()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scenario_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ResetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResetRequest)
    MergeFrom(*source);
  }
}

void ResetRequest::MergeFrom(const ResetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_scenario()) {
    mutable_scenario()->::ScenarioConfig::MergeFrom(from.scenario());
  }
}

void ResetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetRequest::CopyFrom(const ResetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetRequest::IsInitialized() const {
  return true;
}

void ResetRequest::Swap(ResetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetRequest::InternalSwap(ResetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(scenario_, other->scenario_);
}

::google::protobuf::Metadata ResetRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RLAPI_2eproto);
  return ::file_level_metadata_RLAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ConnectRequest::InitAsDefaultInstance() {
  ::_ConnectRequest_default_instance_._instance.get_mutable()->scenario_ = const_cast< ::ScenarioConfig*>(
      ::ScenarioConfig::internal_default_instance());
}
class ConnectRequest::HasBitSetters {
 public:
  static const ::ScenarioConfig& scenario(const ConnectRequest* msg);
};

const ::ScenarioConfig&
ConnectRequest::HasBitSetters::scenario(const ConnectRequest* msg) {
  return *msg->scenario_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectRequest::kScenarioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectRequest::ConnectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConnectRequest)
}
ConnectRequest::ConnectRequest(const ConnectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_scenario()) {
    scenario_ = new ::ScenarioConfig(*from.scenario_);
  } else {
    scenario_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ConnectRequest)
}

void ConnectRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ConnectRequest_RLAPI_2eproto.base);
  scenario_ = nullptr;
}

ConnectRequest::~ConnectRequest() {
  // @@protoc_insertion_point(destructor:ConnectRequest)
  SharedDtor();
}

void ConnectRequest::SharedDtor() {
  if (this != internal_default_instance()) delete scenario_;
}

void ConnectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConnectRequest& ConnectRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ConnectRequest_RLAPI_2eproto.base);
  return *internal_default_instance();
}


void ConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && scenario_ != nullptr) {
    delete scenario_;
  }
  scenario_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConnectRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ConnectRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .ScenarioConfig scenario = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ScenarioConfig::_InternalParse;
        object = msg->mutable_scenario();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConnectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConnectRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ScenarioConfig scenario = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scenario()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConnectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConnectRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConnectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ScenarioConfig scenario = 1;
  if (this->has_scenario()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::scenario(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ConnectRequest)
}

::google::protobuf::uint8* ConnectRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ScenarioConfig scenario = 1;
  if (this->has_scenario()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::scenario(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConnectRequest)
  return target;
}

size_t ConnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConnectRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ScenarioConfig scenario = 1;
  if (this->has_scenario()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scenario_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ConnectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConnectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConnectRequest)
    MergeFrom(*source);
  }
}

void ConnectRequest::MergeFrom(const ConnectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_scenario()) {
    mutable_scenario()->::ScenarioConfig::MergeFrom(from.scenario());
  }
}

void ConnectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectRequest::CopyFrom(const ConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectRequest::IsInitialized() const {
  return true;
}

void ConnectRequest::Swap(ConnectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectRequest::InternalSwap(ConnectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(scenario_, other->scenario_);
}

::google::protobuf::Metadata ConnectRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RLAPI_2eproto);
  return ::file_level_metadata_RLAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AIPlayer::InitAsDefaultInstance() {
}
class AIPlayer::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AIPlayer::kIdFieldNumber;
const int AIPlayer::kTypeFieldNumber;
const int AIPlayer::kDifficultyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AIPlayer::AIPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AIPlayer)
}
AIPlayer::AIPlayer(const AIPlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&difficulty_) -
    reinterpret_cast<char*>(&id_)) + sizeof(difficulty_));
  // @@protoc_insertion_point(copy_constructor:AIPlayer)
}

void AIPlayer::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AIPlayer_RLAPI_2eproto.base);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&difficulty_) -
      reinterpret_cast<char*>(&id_)) + sizeof(difficulty_));
}

AIPlayer::~AIPlayer() {
  // @@protoc_insertion_point(destructor:AIPlayer)
  SharedDtor();
}

void AIPlayer::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AIPlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AIPlayer& AIPlayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AIPlayer_RLAPI_2eproto.base);
  return *internal_default_instance();
}


void AIPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:AIPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&difficulty_) -
      reinterpret_cast<char*>(&id_)) + sizeof(difficulty_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AIPlayer::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AIPlayer*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("AIPlayer.type");
        object = msg->mutable_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 difficulty = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_difficulty(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AIPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AIPlayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AIPlayer.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 difficulty = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &difficulty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AIPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AIPlayer)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AIPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AIPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AIPlayer.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // uint32 difficulty = 3;
  if (this->difficulty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->difficulty(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AIPlayer)
}

::google::protobuf::uint8* AIPlayer::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AIPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AIPlayer.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // uint32 difficulty = 3;
  if (this->difficulty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->difficulty(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AIPlayer)
  return target;
}

size_t AIPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AIPlayer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // uint32 difficulty = 3;
  if (this->difficulty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->difficulty());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AIPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AIPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const AIPlayer* source =
      ::google::protobuf::DynamicCastToGenerated<AIPlayer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AIPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AIPlayer)
    MergeFrom(*source);
  }
}

void AIPlayer::MergeFrom(const AIPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AIPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.difficulty() != 0) {
    set_difficulty(from.difficulty());
  }
}

void AIPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AIPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AIPlayer::CopyFrom(const AIPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AIPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AIPlayer::IsInitialized() const {
  return true;
}

void AIPlayer::Swap(AIPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AIPlayer::InternalSwap(AIPlayer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(difficulty_, other->difficulty_);
}

::google::protobuf::Metadata AIPlayer::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RLAPI_2eproto);
  return ::file_level_metadata_RLAPI_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ScenarioConfig::InitAsDefaultInstance() {
}
class ScenarioConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScenarioConfig::kTypeFieldNumber;
const int ScenarioConfig::kNameFieldNumber;
const int ScenarioConfig::kUsernameFieldNumber;
const int ScenarioConfig::kPlayerIDFieldNumber;
const int ScenarioConfig::kSizeFieldNumber;
const int ScenarioConfig::kNumPlayersFieldNumber;
const int ScenarioConfig::kSeedFieldNumber;
const int ScenarioConfig::kAiseedFieldNumber;
const int ScenarioConfig::kGameSpeedFieldNumber;
const int ScenarioConfig::kPlayersFieldNumber;
const int ScenarioConfig::kSaveReplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScenarioConfig::ScenarioConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ScenarioConfig)
}
ScenarioConfig::ScenarioConfig(const ScenarioConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&savereplay_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(savereplay_));
  // @@protoc_insertion_point(copy_constructor:ScenarioConfig)
}

void ScenarioConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ScenarioConfig_RLAPI_2eproto.base);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&savereplay_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(savereplay_));
}

ScenarioConfig::~ScenarioConfig() {
  // @@protoc_insertion_point(destructor:ScenarioConfig)
  SharedDtor();
}

void ScenarioConfig::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScenarioConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScenarioConfig& ScenarioConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ScenarioConfig_RLAPI_2eproto.base);
  return *internal_default_instance();
}


void ScenarioConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ScenarioConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&savereplay_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(savereplay_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ScenarioConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ScenarioConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ScenarioConfig.type");
        object = msg->mutable_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ScenarioConfig.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string username = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ScenarioConfig.username");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 playerID = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_playerid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 size = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 numPlayers = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_numplayers(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 seed = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_seed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 aiseed = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_aiseed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float gameSpeed = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 77) goto handle_unusual;
        msg->set_gamespeed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // repeated .AIPlayer players = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::AIPlayer::_InternalParse;
          object = msg->add_players();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 82 && (ptr += 1));
        break;
      }
      // bool saveReplay = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_savereplay(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ScenarioConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ScenarioConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ScenarioConfig.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ScenarioConfig.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ScenarioConfig.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 playerID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 numPlayers = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numplayers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seed = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 aiseed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &aiseed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float gameSpeed = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (77 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gamespeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AIPlayer players = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool saveReplay = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &savereplay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ScenarioConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ScenarioConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ScenarioConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ScenarioConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ScenarioConfig.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ScenarioConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ScenarioConfig.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // int32 playerID = 4;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->playerid(), output);
  }

  // uint32 size = 5;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->size(), output);
  }

  // uint32 numPlayers = 6;
  if (this->numplayers() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->numplayers(), output);
  }

  // uint32 seed = 7;
  if (this->seed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->seed(), output);
  }

  // uint32 aiseed = 8;
  if (this->aiseed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->aiseed(), output);
  }

  // float gameSpeed = 9;
  if (this->gamespeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->gamespeed(), output);
  }

  // repeated .AIPlayer players = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->players(static_cast<int>(i)),
      output);
  }

  // bool saveReplay = 11;
  if (this->savereplay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->savereplay(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ScenarioConfig)
}

::google::protobuf::uint8* ScenarioConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ScenarioConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ScenarioConfig.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ScenarioConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ScenarioConfig.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // int32 playerID = 4;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->playerid(), target);
  }

  // uint32 size = 5;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->size(), target);
  }

  // uint32 numPlayers = 6;
  if (this->numplayers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->numplayers(), target);
  }

  // uint32 seed = 7;
  if (this->seed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->seed(), target);
  }

  // uint32 aiseed = 8;
  if (this->aiseed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->aiseed(), target);
  }

  // float gameSpeed = 9;
  if (this->gamespeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->gamespeed(), target);
  }

  // repeated .AIPlayer players = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->players(static_cast<int>(i)), target);
  }

  // bool saveReplay = 11;
  if (this->savereplay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->savereplay(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ScenarioConfig)
  return target;
}

size_t ScenarioConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ScenarioConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AIPlayer players = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string username = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // int32 playerID = 4;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  // uint32 size = 5;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  // uint32 numPlayers = 6;
  if (this->numplayers() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numplayers());
  }

  // uint32 seed = 7;
  if (this->seed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seed());
  }

  // uint32 aiseed = 8;
  if (this->aiseed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->aiseed());
  }

  // float gameSpeed = 9;
  if (this->gamespeed() != 0) {
    total_size += 1 + 4;
  }

  // bool saveReplay = 11;
  if (this->savereplay() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScenarioConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ScenarioConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ScenarioConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ScenarioConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ScenarioConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ScenarioConfig)
    MergeFrom(*source);
  }
}

void ScenarioConfig::MergeFrom(const ScenarioConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ScenarioConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.numplayers() != 0) {
    set_numplayers(from.numplayers());
  }
  if (from.seed() != 0) {
    set_seed(from.seed());
  }
  if (from.aiseed() != 0) {
    set_aiseed(from.aiseed());
  }
  if (from.gamespeed() != 0) {
    set_gamespeed(from.gamespeed());
  }
  if (from.savereplay() != 0) {
    set_savereplay(from.savereplay());
  }
}

void ScenarioConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ScenarioConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScenarioConfig::CopyFrom(const ScenarioConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ScenarioConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScenarioConfig::IsInitialized() const {
  return true;
}

void ScenarioConfig::Swap(ScenarioConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScenarioConfig::InternalSwap(ScenarioConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&players_)->InternalSwap(CastToBase(&other->players_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(size_, other->size_);
  swap(numplayers_, other->numplayers_);
  swap(seed_, other->seed_);
  swap(aiseed_, other->aiseed_);
  swap(gamespeed_, other->gamespeed_);
  swap(savereplay_, other->savereplay_);
}

::google::protobuf::Metadata ScenarioConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_RLAPI_2eproto);
  return ::file_level_metadata_RLAPI_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::GetTemplateRequest* Arena::CreateMaybeMessage< ::GetTemplateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::GetTemplateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Templates* Arena::CreateMaybeMessage< ::Templates >(Arena* arena) {
  return Arena::CreateInternal< ::Templates >(arena);
}
template<> PROTOBUF_NOINLINE ::Template* Arena::CreateMaybeMessage< ::Template >(Arena* arena) {
  return Arena::CreateInternal< ::Template >(arena);
}
template<> PROTOBUF_NOINLINE ::Actions* Arena::CreateMaybeMessage< ::Actions >(Arena* arena) {
  return Arena::CreateInternal< ::Actions >(arena);
}
template<> PROTOBUF_NOINLINE ::Action* Arena::CreateMaybeMessage< ::Action >(Arena* arena) {
  return Arena::CreateInternal< ::Action >(arena);
}
template<> PROTOBUF_NOINLINE ::Observation* Arena::CreateMaybeMessage< ::Observation >(Arena* arena) {
  return Arena::CreateInternal< ::Observation >(arena);
}
template<> PROTOBUF_NOINLINE ::ResetRequest* Arena::CreateMaybeMessage< ::ResetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ResetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ConnectRequest* Arena::CreateMaybeMessage< ::ConnectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ConnectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::AIPlayer* Arena::CreateMaybeMessage< ::AIPlayer >(Arena* arena) {
  return Arena::CreateInternal< ::AIPlayer >(arena);
}
template<> PROTOBUF_NOINLINE ::ScenarioConfig* Arena::CreateMaybeMessage< ::ScenarioConfig >(Arena* arena) {
  return Arena::CreateInternal< ::ScenarioConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

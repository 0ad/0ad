# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import RLAPI_pb2 as RLAPI__pb2


class RLAPIStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Step = channel.unary_unary(
        '/RLAPI/Step',
        request_serializer=RLAPI__pb2.Actions.SerializeToString,
        response_deserializer=RLAPI__pb2.Observation.FromString,
        )
    self.Reset = channel.unary_unary(
        '/RLAPI/Reset',
        request_serializer=RLAPI__pb2.ResetRequest.SerializeToString,
        response_deserializer=RLAPI__pb2.Observation.FromString,
        )
    self.Connect = channel.unary_unary(
        '/RLAPI/Connect',
        request_serializer=RLAPI__pb2.ConnectRequest.SerializeToString,
        response_deserializer=RLAPI__pb2.Observation.FromString,
        )


class RLAPIServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Step(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reset(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Connect(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RLAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Step': grpc.unary_unary_rpc_method_handler(
          servicer.Step,
          request_deserializer=RLAPI__pb2.Actions.FromString,
          response_serializer=RLAPI__pb2.Observation.SerializeToString,
      ),
      'Reset': grpc.unary_unary_rpc_method_handler(
          servicer.Reset,
          request_deserializer=RLAPI__pb2.ResetRequest.FromString,
          response_serializer=RLAPI__pb2.Observation.SerializeToString,
      ),
      'Connect': grpc.unary_unary_rpc_method_handler(
          servicer.Connect,
          request_deserializer=RLAPI__pb2.ConnectRequest.FromString,
          response_serializer=RLAPI__pb2.Observation.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'RLAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
